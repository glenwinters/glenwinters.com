name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    # Needed for GitHub OIDC
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::669733824723:role/github-repos
          aws-region: us-east-1
      - name: Build for staging
        run: npm run build
        env:
          TARGET_BUCKET_NAME: staging.glenwinters.com
          TARGET_ADDRESS: https://staging.glenwinters.com
      - name: Deploy to staging
        run: npm run deploy
      - name: Invalidate Cloudfront cache for staging
        run: aws cloudfront create-invalidation --distribution-id E3SRPN0NPRAHUF --path "/*"
      - name: Build for production (main only)
        run: npm run build
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          TARGET_BUCKET_NAME: staging.glenwinters.com
          TARGET_ADDRESS: https://staging.glenwinters.com
      - name: Deploy to production (main only)
        run: npm run deploy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      - name: Invalidate Cloudfront cache for production (main only)
        run: aws cloudfront create-invalidation --distribution-id E1YVFS469MBOAQ --path "/*"
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
